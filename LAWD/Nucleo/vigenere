//Converte um caractere para seu valor ASCII baseado na posição do alfabeto (a=0, b=1, ..., z=25)
function asciiCode(char){
    let asciiCode = (char.toLowerCase()).charCodeAt(0) - 97; //Converte para minúscula (pois a tabela ascii diferencia maiusculas de minusculas) e ajusta para a posição
    return asciiCode;
}

//Converte um valor numérico (0-25) de volta para um caractere
function asciiChar(code){
    let asciiChar =  String.fromCharCode(code  + 97); //Adiciona 97 para obter o caractere correspondente, pra ficar igual a tabela ascii
    return asciiChar;
}

//Criptografa um único caractere usando a cifra de Vigenère
function cryptChar(c,k){
    let charCode = asciiCode(c); //Obtém o valor ASCII do caractere da mensagem
    let keyCode = asciiCode(k); //Obtém o valor ASCII do caractere da chave
    let cryptCode = (charCode + keyCode) % 26; //Aplica a fórmula de criptografia
    return asciiChar(cryptCode); //Retorna o caractere criptografado
}

//Descriptografa um único caractere usando a cifra de Vigenère
function decryptChar(c,k){
    let charCode = asciiCode(c); //Obtém o valor ASCII do caractere criptografado
    let keyCode = asciiCode(k); //Obtém o valor ASCII do caractere da chave
    let decryptCode = (charCode - keyCode + 26) % 26; //Aplica a fórmula de descriptografia
    return asciiChar(decryptCode); //Retorna o caractere descriptografado
}

//Encontra o caractere da chave dado um caractere criptografado e seu correspondente na mensagem original (Achei a chave assim...)
function findKeyChar(c, w) {
    let cryptCharCode = asciiCode(c);
    let wordCharCode = asciiCode(w);
    let keyCode = (cryptCharCode - wordCharCode + 26) % 26;
    return asciiChar(keyCode);
}


// Criptografa uma palavra usando uma chave
function encryptWord(word, key) {
    let encryptedMessage = ''; 
    let keyIndex = 0; // Índice

    for (let i = 0; i < word.length; i++) {
        let wordChar = word[i];

        // Verifica se o caractere atual é um espaço
        if (wordChar === ' ') {
            encryptedMessage += ' '; // Adiciona espaço sem criptografar, já que estou utilizando ascii...
        } else {
            let keyChar = key[keyIndex % key.length]; // Repetição da chave
            encryptedMessage += cryptChar(wordChar, keyChar);
            keyIndex++; // Apenas incrementa se não for espaço
        }
    }
    return encryptedMessage;
}


function decryptWord(word,cryptWord){ // (A função decryptWord ainda não foi implementada, mas deve seguir uma lógica similar à encryptWord)

}

// console.log(cryptChar("w", "k"));
// console.log(decryptChar("f","t"));
// console.log(findKeyChar("H","O"));
console.log(encryptWord("homem morcego","Jasontodd"));